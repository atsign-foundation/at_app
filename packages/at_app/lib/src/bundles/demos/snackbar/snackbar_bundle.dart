// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: prefer_single_quotes, public_member_api_docs, lines_longer_than_80_chars, implicit_dynamic_list_literal, implicit_dynamic_map_literal

import 'package:mason/mason.dart';

final snackbarBundle = MasonBundle.fromJson(<String, dynamic>{
  "files": [
    {
      "path": "lib/main.dart",
      "data":
          "",
      "type": "text"
    }
  ],
  "hooks": [],
  "name": "snackbar",
  "description": "Send and receive end-to-end encrypted snackbars!",
  "version": "0.1.0",
  "environment": {"mason": "any"},
  "vars": {}
});
