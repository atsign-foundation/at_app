// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: prefer_single_quotes, public_member_api_docs, lines_longer_than_80_chars, implicit_dynamic_list_literal, implicit_dynamic_map_literal

import 'package:mason/mason.dart';

final chitChatBundle = MasonBundle.fromJson(<String, dynamic>{
  "files": [
    {
      "path": "lib/chats_screen.dart",
      "data":
          "aW1wb3J0ICdwYWNrYWdlOmF0X2NoYXRfZmx1dHRlci9hdF9jaGF0X2ZsdXR0ZXIuZGFydCc7CmltcG9ydCAncGFja2FnZTpmbHV0dGVyL21hdGVyaWFsLmRhcnQnOwoKY2xhc3MgQ2hhdHNTY3JlZW4gZXh0ZW5kcyBTdGF0ZWxlc3NXaWRnZXQgewogIGNvbnN0IENoYXRzU2NyZWVuKHRoaXMudGl0bGUsIHtLZXk/IGtleX0pIDogc3VwZXIoa2V5OiBrZXkpOwogIGZpbmFsIFN0cmluZyB0aXRsZTsKICBAb3ZlcnJpZGUKICBXaWRnZXQgYnVpbGQoQnVpbGRDb250ZXh0IGNvbnRleHQpIHsKICAgIC8vICogVGhpcyBpcyBhIHNpbXBsZSB3cmFwcGVyIGFyb3VuZCB0aGUgYXRfY2hhdF9mbHV0dGVyIFtDaGF0U2NyZWVuXQogICAgcmV0dXJuIFNjYWZmb2xkKAogICAgICBhcHBCYXI6IEFwcEJhcih0aXRsZTogY29uc3QgVGV4dCgnQ2hhdCcpKSwKICAgICAgYm9keTogQ2hhdFNjcmVlbigKICAgICAgICBoZWlnaHQ6IE1lZGlhUXVlcnkub2YoY29udGV4dCkuc2l6ZS5oZWlnaHQsCiAgICAgICAgdGl0bGU6IHRpdGxlLAogICAgICAgIGlzU2NyZWVuOiB0cnVlLAogICAgICAgIGluY29taW5nTWVzc2FnZUNvbG9yOiBDb2xvcnMuZ3JlZW5bMjAwXSEsCiAgICAgICAgb3V0Z29pbmdNZXNzYWdlQ29sb3I6IENvbG9ycy5ibHVlWzIwMF0hLAogICAgICApLAogICAgKTsKICB9Cn0K",
      "type": "text"
    },
    {
      "path": "lib/contact_screen.dart",
      "data":
          "aW1wb3J0ICdwYWNrYWdlOmF0X2NoYXRfZmx1dHRlci9hdF9jaGF0X2ZsdXR0ZXIuZGFydCc7CmltcG9ydCAncGFja2FnZTphdF9jb250YWN0c19mbHV0dGVyL2F0X2NvbnRhY3RzX2ZsdXR0ZXIuZGFydCc7CmltcG9ydCAncGFja2FnZTpmbHV0dGVyL21hdGVyaWFsLmRhcnQnOwoKaW1wb3J0ICdjaGF0c19zY3JlZW4uZGFydCc7CgpjbGFzcyBDb250YWN0U2NyZWVuIGV4dGVuZHMgU3RhdGVmdWxXaWRnZXQgewogIGNvbnN0IENvbnRhY3RTY3JlZW4oe0tleT8ga2V5fSkgOiBzdXBlcihrZXk6IGtleSk7CgogIEBvdmVycmlkZQogIF9Db250YWN0U2NyZWVuU3RhdGUgY3JlYXRlU3RhdGUoKSA9PiBfQ29udGFjdFNjcmVlblN0YXRlKCk7Cn0KCmNsYXNzIF9Db250YWN0U2NyZWVuU3RhdGUgZXh0ZW5kcyBTdGF0ZTxDb250YWN0U2NyZWVuPiB7CiAgQG92ZXJyaWRlCiAgV2lkZ2V0IGJ1aWxkKEJ1aWxkQ29udGV4dCBjb250ZXh0KSB7CiAgICByZXR1cm4gQ29udGFjdHNTY3JlZW4oCiAgICAgIC8vICogV2hlbiB0aGUgc2VuZCBpY29uIGlzIHByZXNzZWQgZm9yIGEgcGFydGljdWxhciBjb250YWN0CiAgICAgIG9uU2VuZEljb25QcmVzc2VkOiAoU3RyaW5nIGF0c2lnbikgewogICAgICAgIC8vICogU2V0IHRoZSBbYXRzaWduXSB0aGF0IHlvdSB3aWxsIGJlIGNoYXR0aW5nIHdpdGggb24gdGhlIGNoYXQgc2NyZWVuCiAgICAgICAgc2V0Q2hhdFdpdGhBdFNpZ24oYXRzaWduKTsKICAgICAgICAvLyAqIFRoZW4gZ28gdG8gdGhlIGNoYXQgc2NyZWVuCiAgICAgICAgTmF2aWdhdG9yLnB1c2goCiAgICAgICAgICBjb250ZXh0LAogICAgICAgICAgTWF0ZXJpYWxQYWdlUm91dGUoYnVpbGRlcjogKGNvbnRleHQpIHsKICAgICAgICAgICAgcmV0dXJuIENoYXRzU2NyZWVuKGF0c2lnbik7CiAgICAgICAgICB9KSwKICAgICAgICApOwogICAgICB9LAogICAgKTsKICB9Cn0K",
      "type": "text"
    },
    {
      "path": "lib/main.dart",
      "data":
          "aW1wb3J0ICdkYXJ0OmFzeW5jJzsKCmltcG9ydCAncGFja2FnZTphdF9hcHBfZmx1dHRlci9hdF9hcHBfZmx1dHRlci5kYXJ0JyBzaG93IEF0RW52OwppbXBvcnQgJ3BhY2thZ2U6YXRfY2hhdF9mbHV0dGVyL2F0X2NoYXRfZmx1dHRlci5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmF0X2NsaWVudF9tb2JpbGUvYXRfY2xpZW50X21vYmlsZS5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmF0X2NvbnRhY3RzX2ZsdXR0ZXIvYXRfY29udGFjdHNfZmx1dHRlci5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmF0X29uYm9hcmRpbmdfZmx1dHRlci9hdF9vbmJvYXJkaW5nX2ZsdXR0ZXIuZGFydCcgc2hvdyBPbmJvYXJkaW5nOwppbXBvcnQgJ3BhY2thZ2U6YXRfdXRpbHMvYXRfbG9nZ2VyLmRhcnQnIHNob3cgQXRTaWduTG9nZ2VyOwppbXBvcnQgJ2NvbnRhY3Rfc2NyZWVuLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlci9tYXRlcmlhbC5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOnBhdGhfcHJvdmlkZXIvcGF0aF9wcm92aWRlci5kYXJ0JyBzaG93IGdldEFwcGxpY2F0aW9uU3VwcG9ydERpcmVjdG9yeTsKCmZpbmFsIEF0U2lnbkxvZ2dlciBfbG9nZ2VyID0gQXRTaWduTG9nZ2VyKEF0RW52LmFwcE5hbWVzcGFjZSk7CgpGdXR1cmU8dm9pZD4gbWFpbigpIGFzeW5jIHsKICAvLyAqIEF0RW52IGlzIGFuIGFidHJhY3Rpb24gb2YgdGhlIGZsdXR0ZXJfZG90ZW52IHBhY2thZ2UgdXNlZCB0bwogIC8vICogbG9hZCB0aGUgZW52aXJvbm1lbnQgdmFyaWFibGVzIHNldCBieSBhdF9hcHAKICB0cnkgewogICAgYXdhaXQgQXRFbnYubG9hZCgpOwogIH0gY2F0Y2ggKGUpIHsKICAgIF9sb2dnZXIuZmluZXIoJ0Vudmlyb25tZW50IGZhaWxlZCB0byBsb2FkIGZyb20gLmVudjogJywgZSk7CiAgfQogIHJ1bkFwcChjb25zdCBNeUFwcCgpKTsKfQoKRnV0dXJlPEF0Q2xpZW50UHJlZmVyZW5jZT4gbG9hZEF0Q2xpZW50UHJlZmVyZW5jZSgpIGFzeW5jIHsKICB2YXIgZGlyID0gYXdhaXQgZ2V0QXBwbGljYXRpb25TdXBwb3J0RGlyZWN0b3J5KCk7CgogIHJldHVybiBBdENsaWVudFByZWZlcmVuY2UoKQogICAgLi5yb290RG9tYWluID0gQXRFbnYucm9vdERvbWFpbgogICAgLi5uYW1lc3BhY2UgPSBBdEVudi5hcHBOYW1lc3BhY2UKICAgIC4uaGl2ZVN0b3JhZ2VQYXRoID0gZGlyLnBhdGgKICAgIC4uY29tbWl0TG9nUGF0aCA9IGRpci5wYXRoCiAgICAuLmlzTG9jYWxTdG9yZVJlcXVpcmVkID0gdHJ1ZTsKICAvLyBUT0RPCiAgLy8gKiBCeSBkZWZhdWx0LCB0aGlzIGNvbmZpZ3VyYXRpb24gaXMgc3VpdGFibGUgZm9yIG1vc3QgYXBwbGljYXRpb25zCiAgLy8gKiBJbiBhZHZhbmNlZCBjYXNlcyB5b3UgbWF5IG5lZWQgdG8gbW9kaWZ5IFtBdENsaWVudFByZWZlcmVuY2VdCiAgLy8gKiBSZWFkIG1vcmUgaGVyZTogaHR0cHM6Ly9wdWIuZGV2L2RvY3VtZW50YXRpb24vYXRfY2xpZW50L2xhdGVzdC9hdF9jbGllbnQvQXRDbGllbnRQcmVmZXJlbmNlLWNsYXNzLmh0bWwKfQoKY2xhc3MgTXlBcHAgZXh0ZW5kcyBTdGF0ZWZ1bFdpZGdldCB7CiAgY29uc3QgTXlBcHAoe0tleT8ga2V5fSkgOiBzdXBlcihrZXk6IGtleSk7CiAgQG92ZXJyaWRlCiAgX015QXBwU3RhdGUgY3JlYXRlU3RhdGUoKSA9PiBfTXlBcHBTdGF0ZSgpOwp9CgpjbGFzcyBfTXlBcHBTdGF0ZSBleHRlbmRzIFN0YXRlPE15QXBwPiB7CiAgLy8gKiBsb2FkIHRoZSBBdENsaWVudFByZWZlcmVuY2UgaW4gdGhlIGJhY2tncm91bmQKICBGdXR1cmU8QXRDbGllbnRQcmVmZXJlbmNlPiBmdXR1cmVQcmVmZXJlbmNlID0gbG9hZEF0Q2xpZW50UHJlZmVyZW5jZSgpOwoKICBAb3ZlcnJpZGUKICBXaWRnZXQgYnVpbGQoQnVpbGRDb250ZXh0IGNvbnRleHQpIHsKICAgIHJldHVybiBNYXRlcmlhbEFwcCgKICAgICAgLy8gKiBUaGUgb25ib2FyZGluZyBzY3JlZW4gKGZpcnN0IHNjcmVlbikKICAgICAgaG9tZTogU2NhZmZvbGQoCiAgICAgICAgYXBwQmFyOiBBcHBCYXIoCiAgICAgICAgICB0aXRsZTogY29uc3QgVGV4dCgnTXlBcHAnKSwKICAgICAgICApLAogICAgICAgIGJvZHk6IEJ1aWxkZXIoCiAgICAgICAgICBidWlsZGVyOiAoY29udGV4dCkgPT4gQ2VudGVyKAogICAgICAgICAgICBjaGlsZDogRWxldmF0ZWRCdXR0b24oCiAgICAgICAgICAgICAgb25QcmVzc2VkOiAoKSBhc3luYyB7CiAgICAgICAgICAgICAgICAvLyAqIFRoZSBPbmJvYXJkaW5nIHdpZGdldAogICAgICAgICAgICAgICAgLy8gKiBUaGlzIHdpZGdldCBjb250YWlucyB0aGUgcmVxdWlyZWQgbG9naWMgZm9yIG9uYm9hcmRpbmcgYW4gQHNpZ24gaW50byB0aGUgYXBwCiAgICAgICAgICAgICAgICAvLyAqIFJlYWQgbW9yZSBoZXJlOiBodHRwczovL3B1Yi5kZXYvcGFja2FnZXMvYXRfb25ib2FyZGluZ19mbHV0dGVyCiAgICAgICAgICAgICAgICBPbmJvYXJkaW5nKAogICAgICAgICAgICAgICAgICBjb250ZXh0OiBjb250ZXh0LAogICAgICAgICAgICAgICAgICBhdENsaWVudFByZWZlcmVuY2U6IGF3YWl0IGZ1dHVyZVByZWZlcmVuY2UsCiAgICAgICAgICAgICAgICAgIGRvbWFpbjogQXRFbnYucm9vdERvbWFpbiwKICAgICAgICAgICAgICAgICAgcm9vdEVudmlyb25tZW50OiBBdEVudi5yb290RW52aXJvbm1lbnQsCiAgICAgICAgICAgICAgICAgIGFwcEFQSUtleTogQXRFbnYuYXBwQXBpS2V5LAogICAgICAgICAgICAgICAgICBvbmJvYXJkOiAodmFsdWUsIGF0c2lnbikgewogICAgICAgICAgICAgICAgICAgIF9sb2dnZXIuZmluZXIoJ1N1Y2Nlc3NmdWxseSBvbmJvYXJkZWQgJGF0c2lnbicpOwogICAgICAgICAgICAgICAgICAgIC8vICogR2V0IHRoZSBbQXRDbGllbnRNYW5hZ2VyXSBpbnN0YW5jZQogICAgICAgICAgICAgICAgICAgIEF0Q2xpZW50TWFuYWdlciBhdENsaWVudE1hbmFnZXIgPSBBdENsaWVudE1hbmFnZXIuZ2V0SW5zdGFuY2UoKTsKICAgICAgICAgICAgICAgICAgICAvLyAqIEluaXRpYWxpemUgdGhlIGF0X2NvbnRhY3RzX2ZsdXR0ZXIgY29udGFjdHMgc2VydmljZQogICAgICAgICAgICAgICAgICAgIGluaXRpYWxpemVDb250YWN0c1NlcnZpY2Uocm9vdERvbWFpbjogQXRFbnYucm9vdERvbWFpbik7CiAgICAgICAgICAgICAgICAgICAgLy8gKiBJbml0aWFsaXplIHRoZSBhdF9jaGF0X2ZsdXR0ZXIgY2hhdCBzZXJ2aWNlCiAgICAgICAgICAgICAgICAgICAgaW5pdGlhbGl6ZUNoYXRTZXJ2aWNlKGF0Q2xpZW50TWFuYWdlciwgYXRzaWduISk7CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIG9uRXJyb3I6IChlcnJvcikgewogICAgICAgICAgICAgICAgICAgIF9sb2dnZXIuc2V2ZXJlKCdPbmJvYXJkaW5nIHRocm93cyAkZXJyb3IgZXJyb3InKTsKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgbmV4dFNjcmVlbjogY29uc3QgQ29udGFjdFNjcmVlbigpLAogICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIGNoaWxkOiBjb25zdCBUZXh0KCdPbmJvYXJkIGFuIEBzaWduJyksCiAgICAgICAgICAgICksCiAgICAgICAgICApLAogICAgICAgICksCiAgICAgICksCiAgICApOwogIH0KfQo=",
      "type": "text"
    },
    {
      "path": "lib/onboarding_button.dart",
      "data":
          "",
      "type": "text"
    }
  ],
  "hooks": [],
  "name": "chit_chat",
  "description": "Send end-to-end encrypted messages on the @platform!",
  "version": "0.1.0",
  "environment": {"mason": "any"},
  "vars": {}
});
