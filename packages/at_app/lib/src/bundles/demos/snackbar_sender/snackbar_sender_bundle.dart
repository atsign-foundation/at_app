// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: prefer_single_quotes, public_member_api_docs, lines_longer_than_80_chars, implicit_dynamic_list_literal, implicit_dynamic_map_literal

import 'package:mason/mason.dart';

final snackbarSenderBundle = MasonBundle.fromJson(<String, dynamic>{
  "files": [
    {
      "path": "lib/main.dart",
      "data":
          "aW1wb3J0ICdkYXJ0OmFzeW5jJzsKaW1wb3J0ICdkYXJ0Om1hdGgnOwoKaW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvbWF0ZXJpYWwuZGFydCc7CmltcG9ydCAncGFja2FnZTphdF9jbGllbnRfbW9iaWxlL2F0X2NsaWVudF9tb2JpbGUuZGFydCc7CmltcG9ydCAncGFja2FnZTphdF9jb21tb25zL2F0X2NvbW1vbnMuZGFydCc7CgppbXBvcnQgJ3BhY2thZ2U6YXRfb25ib2FyZGluZ19mbHV0dGVyL2F0X29uYm9hcmRpbmdfZmx1dHRlci5kYXJ0JyBzaG93IE9uYm9hcmRpbmc7CmltcG9ydCAncGFja2FnZTphdF91dGlscy9hdF9sb2dnZXIuZGFydCcgc2hvdyBBdFNpZ25Mb2dnZXI7CmltcG9ydCAncGFja2FnZTpwYXRoX3Byb3ZpZGVyL3BhdGhfcHJvdmlkZXIuZGFydCcgc2hvdyBnZXRBcHBsaWNhdGlvblN1cHBvcnREaXJlY3Rvcnk7CmltcG9ydCAncGFja2FnZTphdF9hcHBfZmx1dHRlci9hdF9hcHBfZmx1dHRlci5kYXJ0JyBzaG93IEF0RW52OwoKLy9TdHJpbmcgc25hY2sgPSAnJzsKRnV0dXJlPHZvaWQ+IG1haW4oKSBhc3luYyB7CiAgYXdhaXQgQXRFbnYubG9hZCgpOwogIHJ1bkFwcChjb25zdCBNeUFwcCgpKTsKfQoKRnV0dXJlPEF0Q2xpZW50UHJlZmVyZW5jZT4gbG9hZEF0Q2xpZW50UHJlZmVyZW5jZSgpIGFzeW5jIHsKICB2YXIgZGlyID0gYXdhaXQgZ2V0QXBwbGljYXRpb25TdXBwb3J0RGlyZWN0b3J5KCk7CiAgcmV0dXJuIEF0Q2xpZW50UHJlZmVyZW5jZSgpCiAgICAgICAgLi5yb290RG9tYWluID0gQXRFbnYucm9vdERvbWFpbgogICAgICAgIC4ubmFtZXNwYWNlID0gQXRFbnYuYXBwTmFtZXNwYWNlCiAgICAgICAgLi5oaXZlU3RvcmFnZVBhdGggPSBkaXIucGF0aAogICAgICAgIC4uY29tbWl0TG9nUGF0aCA9IGRpci5wYXRoCiAgICAgICAgLi5pc0xvY2FsU3RvcmVSZXF1aXJlZCA9IHRydWUKICAgICAgLy8gVE9ETyBzZXQgdGhlIHJlc3Qgb2YgeW91ciBBdENsaWVudFByZWZlcmVuY2UgaGVyZQogICAgICA7Cn0KCmNsYXNzIE15QXBwIGV4dGVuZHMgU3RhdGVmdWxXaWRnZXQgewogIGNvbnN0IE15QXBwKHtLZXk/IGtleX0pIDogc3VwZXIoa2V5OiBrZXkpOwogIEBvdmVycmlkZQogIF9NeUFwcFN0YXRlIGNyZWF0ZVN0YXRlKCkgPT4gX015QXBwU3RhdGUoKTsKfQoKY2xhc3MgX015QXBwU3RhdGUgZXh0ZW5kcyBTdGF0ZTxNeUFwcD4gewogIC8vICogbG9hZCB0aGUgQXRDbGllbnRQcmVmZXJlbmNlIGluIHRoZSBiYWNrZ3JvdW5kCiAgRnV0dXJlPEF0Q2xpZW50UHJlZmVyZW5jZT4gZnV0dXJlUHJlZmVyZW5jZSA9IGxvYWRBdENsaWVudFByZWZlcmVuY2UoKTsKICBBdENsaWVudFByZWZlcmVuY2U/IGF0Q2xpZW50UHJlZmVyZW5jZTsKCiAgZmluYWwgQXRTaWduTG9nZ2VyIF9sb2dnZXIgPSBBdFNpZ25Mb2dnZXIoQXRFbnYuYXBwTmFtZXNwYWNlKTsKCiAgQG92ZXJyaWRlCiAgV2lkZ2V0IGJ1aWxkKEJ1aWxkQ29udGV4dCBjb250ZXh0KSB7CiAgICByZXR1cm4gTWF0ZXJpYWxBcHAoCiAgICAgIC8vICogVGhlIG9uYm9hcmRpbmcgc2NyZWVuIChmaXJzdCBzY3JlZW4pCiAgICAgIGhvbWU6IFNjYWZmb2xkKAogICAgICAgIGFwcEJhcjogQXBwQmFyKAogICAgICAgICAgdGl0bGU6IGNvbnN0IFRleHQoJ1NlbmQgeW91cnNlbGYgYSBTbmFja2JhcicpLAogICAgICAgICksCiAgICAgICAgYm9keTogQnVpbGRlcigKICAgICAgICAgIGJ1aWxkZXI6IChjb250ZXh0KSA9PiBDZW50ZXIoCiAgICAgICAgICAgIGNoaWxkOiBFbGV2YXRlZEJ1dHRvbigKICAgICAgICAgICAgICBvblByZXNzZWQ6ICgpIGFzeW5jIHsKICAgICAgICAgICAgICAgIHZhciBwcmVmZXJlbmNlID0gYXdhaXQgZnV0dXJlUHJlZmVyZW5jZTsKICAgICAgICAgICAgICAgIHNldFN0YXRlKCgpIHsKICAgICAgICAgICAgICAgICAgYXRDbGllbnRQcmVmZXJlbmNlID0gcHJlZmVyZW5jZTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgT25ib2FyZGluZygKICAgICAgICAgICAgICAgICAgY29udGV4dDogY29udGV4dCwKICAgICAgICAgICAgICAgICAgYXRDbGllbnRQcmVmZXJlbmNlOiBhdENsaWVudFByZWZlcmVuY2UhLAogICAgICAgICAgICAgICAgICBkb21haW46IEF0RW52LnJvb3REb21haW4sCiAgICAgICAgICAgICAgICAgIHJvb3RFbnZpcm9ubWVudDogQXRFbnYucm9vdEVudmlyb25tZW50LAogICAgICAgICAgICAgICAgICBhcHBBUElLZXk6IEF0RW52LmFwcEFwaUtleSwKICAgICAgICAgICAgICAgICAgb25ib2FyZDogKHZhbHVlLCBhdHNpZ24pIHsKICAgICAgICAgICAgICAgICAgICBfbG9nZ2VyLmZpbmVyKCdTdWNjZXNzZnVsbHkgb25ib2FyZGVkICRhdHNpZ24nKTsKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgb25FcnJvcjogKGVycm9yKSB7CiAgICAgICAgICAgICAgICAgICAgX2xvZ2dlci5zZXZlcmUoJ09uYm9hcmRpbmcgdGhyb3dzICRlcnJvciBlcnJvcicpOwogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBuZXh0U2NyZWVuOiBjb25zdCBIb21lU2NyZWVuKCksCiAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgY2hpbGQ6IGNvbnN0IFRleHQoJ09uYm9hcmQgYW4gQHNpZ24nKSwKICAgICAgICAgICAgKSwKICAgICAgICAgICksCiAgICAgICAgKSwKICAgICAgKSwKICAgICk7CiAgfQp9CgovLyogVGhlIG5leHQgc2NyZWVuIGFmdGVyIG9uYm9hcmRpbmcgKHNlY29uZCBzY3JlZW4pCmNsYXNzIEhvbWVTY3JlZW4gZXh0ZW5kcyBTdGF0ZWZ1bFdpZGdldCB7CiAgY29uc3QgSG9tZVNjcmVlbih7S2V5PyBrZXl9KSA6IHN1cGVyKGtleToga2V5KTsKCiAgQG92ZXJyaWRlCiAgU3RhdGU8SG9tZVNjcmVlbj4gY3JlYXRlU3RhdGUoKSA9PiBfSG9tZVNjcmVlblN0YXRlKCk7Cn0KCmNsYXNzIF9Ib21lU2NyZWVuU3RhdGUgZXh0ZW5kcyBTdGF0ZTxIb21lU2NyZWVuPiB7CiAgU25hY2sgbGFzdHNuYWNrID0gU25hY2soc25hY2s6ICdub25lJyk7CiAgQG92ZXJyaWRlCiAgV2lkZ2V0IGJ1aWxkKEJ1aWxkQ29udGV4dCBjb250ZXh0KSB7CiAgICAvLy8gR2V0IHRoZSBBdENsaWVudE1hbmFnZXIgaW5zdGFuY2UKICAgIHZhciBhdENsaWVudE1hbmFnZXIgPSBBdENsaWVudE1hbmFnZXIuZ2V0SW5zdGFuY2UoKTsKICAgIFN0cmluZz8gY3VycmVudEF0c2lnbjsKICAgIGxhdGUgQXRDbGllbnQgYXRDbGllbnQ7CgogICAgYXRDbGllbnQgPSBhdENsaWVudE1hbmFnZXIuYXRDbGllbnQ7CiAgICBjdXJyZW50QXRzaWduID0gYXRDbGllbnQuZ2V0Q3VycmVudEF0U2lnbigpOwogICAgcmV0dXJuIFNjYWZmb2xkKAogICAgICBhcHBCYXI6IEFwcEJhcigKICAgICAgICB0aXRsZTogY29uc3QgVGV4dCgnU25hY2tiYXIgc2VuZGVyJyksCiAgICAgICksCiAgICAgIGJvZHk6IENlbnRlcigKICAgICAgICBjaGlsZDogQ29sdW1uKAogICAgICAgICAgY2hpbGRyZW46IFsKICAgICAgICAgICAgY29uc3QgVGV4dCgnU3VjY2Vzc2Z1bGx5IG9uYm9hcmRlZCBhbmQgbmF2aWdhdGVkIHRvIEZpcnN0QXBwU2NyZWVuJyksCgogICAgICAgICAgICAvLy8gVXNlIHRoZSBBdENsaWVudE1hbmFnZXIgaW5zdGFuY2UgdG8gZ2V0IHRoZSBjdXJyZW50IGF0c2lnbgogICAgICAgICAgICBUZXh0KCdDdXJyZW50IEBzaWduOiAkY3VycmVudEF0c2lnbicpLAogICAgICAgICAgICBjb25zdCBTcGFjZXIoZmxleDogMSksCiAgICAgICAgICAgIGNvbnN0IFRleHQoJ1NlbmQgeW91cnNlbGYgYSBzbmFja2JhcicpLAogICAgICAgICAgICBFbGV2YXRlZEJ1dHRvbigKICAgICAgICAgICAgICBvblByZXNzZWQ6ICgpIHsKICAgICAgICAgICAgICAgIHNlbmRBdHNpZ25EYXRhLmNhbGwoY29udGV4dCwgbGFzdHNuYWNrKTsKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIGNoaWxkOiBjb25zdCBUZXh0KCdTZW5kIGEgc25hY2snKSwKICAgICAgICAgICAgKSwKICAgICAgICAgICAgY29uc3QgU3BhY2VyKAogICAgICAgICAgICAgIGZsZXg6IDEsCiAgICAgICAgICAgICksCiAgICAgICAgICBdLAogICAgICAgICksCiAgICAgICksCiAgICApOwogIH0KfQoKdm9pZCBzZW5kQXRzaWduRGF0YShjb250ZXh0LCBTbmFjayBsYXN0c25hY2spIGFzeW5jIHsKICAvLy8gR2V0IHRoZSBBdENsaWVudE1hbmFnZXIgaW5zdGFuY2UKICB2YXIgYXRDbGllbnRNYW5hZ2VyID0gQXRDbGllbnRNYW5hZ2VyLmdldEluc3RhbmNlKCk7CgogIEZ1dHVyZTxBdENsaWVudFByZWZlcmVuY2U+IGZ1dHVyZVByZWZlcmVuY2UgPSBsb2FkQXRDbGllbnRQcmVmZXJlbmNlKCk7CgogIHZhciBwcmVmZXJlbmNlID0gYXdhaXQgZnV0dXJlUHJlZmVyZW5jZTsKCiAgdmFyIHNuYWNrcyA9IFsKICAgICcgTWlsa3kgV2F5JywKICAgICcgRGltZSBCYXInLAogICAgJyBDcnVuY2h5IEJhcicsCiAgICAnIE1hcnMgQmFyJywKICAgICcgU25pY2tlcnMgQmFyJywKICAgICcgWmFnbnV0IEJhcicsCiAgICAnbiBBbG1vbmQgSm95IEJhcicsCiAgICAnIDMgTXVza2V0ZWVycyBCYXInLAogICAgJyBDbGFyayBCYXInLAogICAgJyBDYXJhbWVsbG8gQmFyJywKICAgICcgVHdpeCBCYXInLAogICAgJyBLaXRLYXQgQmFyJywKICBdOwogIFN0cmluZz8gY3VycmVudEF0c2lnbjsKICBsYXRlIEF0Q2xpZW50IGF0Q2xpZW50OwogIGF0Q2xpZW50ID0gYXRDbGllbnRNYW5hZ2VyLmF0Q2xpZW50OwogIGF0Q2xpZW50TWFuYWdlci5hdENsaWVudC5zZXRQcmVmZXJlbmNlcyhwcmVmZXJlbmNlKTsKICBjdXJyZW50QXRzaWduID0gYXRDbGllbnQuZ2V0Q3VycmVudEF0U2lnbigpOwoKICB2YXIgbWV0YURhdGEgPSBNZXRhZGF0YSgpCiAgICAuLmlzUHVibGljID0gdHJ1ZQogICAgLi5pc0VuY3J5cHRlZCA9IHRydWUKICAgIC4ubmFtZXNwYWNlQXdhcmUgPSB0cnVlCiAgICAuLnR0bCA9IDEwMDAwMDsKCiAgdmFyIGtleSA9IEF0S2V5KCkKICAgIC4ua2V5ID0gJ3NuYWNrYmFyJwogICAgLi5zaGFyZWRCeSA9IGN1cnJlbnRBdHNpZ24KICAgIC4uc2hhcmVkV2l0aCA9IG51bGwKICAgIC4ubWV0YWRhdGEgPSBtZXRhRGF0YTsKCiAgLy8gVGhlIG1hZ2ljIGxpbmUgdG8gc2VuZCB0aGUgc25hY2sKICBTbmFjayBzbmFja2JhciA9IFNuYWNrKHNuYWNrOiBzbmFja3NbUmFuZG9tKCkubmV4dEludChzbmFja3MubGVuZ3RoKV0pOwogIC8vIE1ha2Ugc3VyZSB3ZSBzZW5kIGEgZnJlc2ggc25hY2sgIQogIHdoaWxlIChsYXN0c25hY2suc25hY2sgPT0gc25hY2tiYXIuc25hY2spIHsKICAgIHNuYWNrYmFyID0gU25hY2soc25hY2s6IHNuYWNrc1tSYW5kb20oKS5uZXh0SW50KHNuYWNrcy5sZW5ndGgpXSk7CiAgfQogIGF3YWl0IGF0Q2xpZW50LnB1dChrZXksIHNuYWNrYmFyLnRvSnNvbigpLnRvU3RyaW5nKCkpOwogIHBvcFNuYWNrQmFyKGNvbnRleHQsIHNuYWNrYmFyLnNuYWNrKTsKfQoKdm9pZCBwb3BTbmFja0Jhcihjb250ZXh0LCBTdHJpbmcgc25hY2spIHsKICBmaW5hbCBzbmFja0JhciA9IFNuYWNrQmFyKAogICAgY29udGVudDogVGV4dCgnV2UganVzdCBzZW50LiBBJHNuYWNrICEgJyksCiAgICBhY3Rpb246IFNuYWNrQmFyQWN0aW9uKAogICAgICBsYWJlbDogJ1VuZG8nLAogICAgICBvblByZXNzZWQ6ICgpIHsKICAgICAgICAvLyBTb21lIGNvZGUgdG8gdW5kbyB0aGUgY2hhbmdlLgogICAgICB9LAogICAgKSwKICApOwoKICBTY2FmZm9sZE1lc3Nlbmdlci5vZihjb250ZXh0KS5zaG93U25hY2tCYXIoc25hY2tCYXIpOwp9CgpjbGFzcyBTbmFjayB7CiAgU3RyaW5nIHNuYWNrOwoKICBTbmFjayh7CiAgICByZXF1aXJlZCB0aGlzLnNuYWNrLAogIH0pOwoKICBTbmFjay5mcm9tSnNvbihNYXA8U3RyaW5nLCBkeW5hbWljPiBqc29uKSA6IHNuYWNrID0ganNvblsnc25hY2snXTsKCiAgTWFwPFN0cmluZywgZHluYW1pYz4gdG9Kc29uKCkgPT4gewogICAgICAgICcic25hY2siJzogJyIkc25hY2siJywKICAgICAgfTsKfQo=",
      "type": "text"
    }
  ],
  "hooks": [],
  "name": "snackbar_sender",
  "description": "Send snackbars to a flutter web application publically.",
  "version": "0.1.0",
  "environment": {"mason": "any"},
  "vars": {}
});
