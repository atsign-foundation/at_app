// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: prefer_single_quotes, public_member_api_docs, lines_longer_than_80_chars, implicit_dynamic_list_literal, implicit_dynamic_map_literal

import 'package:mason/mason.dart';

final snackbarSenderBundle = MasonBundle.fromJson(<String, dynamic>{
  "files": [
    {
      "path": "lib\\main.dart",
      "data":
          "aW1wb3J0ICdkYXJ0OmFzeW5jJzsNCmltcG9ydCAnZGFydDptYXRoJzsNCg0KaW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvbWF0ZXJpYWwuZGFydCc7DQppbXBvcnQgJ3BhY2thZ2U6YXRfY2xpZW50X21vYmlsZS9hdF9jbGllbnRfbW9iaWxlLmRhcnQnOw0KaW1wb3J0ICdwYWNrYWdlOmF0X2NvbW1vbnMvYXRfY29tbW9ucy5kYXJ0JzsNCg0KaW1wb3J0ICdwYWNrYWdlOmF0X29uYm9hcmRpbmdfZmx1dHRlci9hdF9vbmJvYXJkaW5nX2ZsdXR0ZXIuZGFydCcgc2hvdyBPbmJvYXJkaW5nOw0KaW1wb3J0ICdwYWNrYWdlOmF0X3V0aWxzL2F0X2xvZ2dlci5kYXJ0JyBzaG93IEF0U2lnbkxvZ2dlcjsNCmltcG9ydCAncGFja2FnZTpwYXRoX3Byb3ZpZGVyL3BhdGhfcHJvdmlkZXIuZGFydCcgc2hvdyBnZXRBcHBsaWNhdGlvblN1cHBvcnREaXJlY3Rvcnk7DQppbXBvcnQgJ3BhY2thZ2U6YXRfYXBwX2ZsdXR0ZXIvYXRfYXBwX2ZsdXR0ZXIuZGFydCcgc2hvdyBBdEVudjsNCg0KLy9TdHJpbmcgc25hY2sgPSAnJzsNCkZ1dHVyZTx2b2lkPiBtYWluKCkgYXN5bmMgew0KICBhd2FpdCBBdEVudi5sb2FkKCk7DQogIHJ1bkFwcChjb25zdCBNeUFwcCgpKTsNCn0NCg0KRnV0dXJlPEF0Q2xpZW50UHJlZmVyZW5jZT4gbG9hZEF0Q2xpZW50UHJlZmVyZW5jZSgpIGFzeW5jIHsNCiAgdmFyIGRpciA9IGF3YWl0IGdldEFwcGxpY2F0aW9uU3VwcG9ydERpcmVjdG9yeSgpOw0KICByZXR1cm4gQXRDbGllbnRQcmVmZXJlbmNlKCkNCiAgICAgICAgLi5yb290RG9tYWluID0gQXRFbnYucm9vdERvbWFpbg0KICAgICAgICAuLm5hbWVzcGFjZSA9IEF0RW52LmFwcE5hbWVzcGFjZQ0KICAgICAgICAuLmhpdmVTdG9yYWdlUGF0aCA9IGRpci5wYXRoDQogICAgICAgIC4uY29tbWl0TG9nUGF0aCA9IGRpci5wYXRoDQogICAgICAgIC4uaXNMb2NhbFN0b3JlUmVxdWlyZWQgPSB0cnVlDQogICAgICAvLyBUT0RPIHNldCB0aGUgcmVzdCBvZiB5b3VyIEF0Q2xpZW50UHJlZmVyZW5jZSBoZXJlDQogICAgICA7DQp9DQoNCmNsYXNzIE15QXBwIGV4dGVuZHMgU3RhdGVmdWxXaWRnZXQgew0KICBjb25zdCBNeUFwcCh7S2V5PyBrZXl9KSA6IHN1cGVyKGtleToga2V5KTsNCiAgQG92ZXJyaWRlDQogIF9NeUFwcFN0YXRlIGNyZWF0ZVN0YXRlKCkgPT4gX015QXBwU3RhdGUoKTsNCn0NCg0KY2xhc3MgX015QXBwU3RhdGUgZXh0ZW5kcyBTdGF0ZTxNeUFwcD4gew0KICAvLyAqIGxvYWQgdGhlIEF0Q2xpZW50UHJlZmVyZW5jZSBpbiB0aGUgYmFja2dyb3VuZA0KICBGdXR1cmU8QXRDbGllbnRQcmVmZXJlbmNlPiBmdXR1cmVQcmVmZXJlbmNlID0gbG9hZEF0Q2xpZW50UHJlZmVyZW5jZSgpOw0KICBBdENsaWVudFByZWZlcmVuY2U/IGF0Q2xpZW50UHJlZmVyZW5jZTsNCg0KICBmaW5hbCBBdFNpZ25Mb2dnZXIgX2xvZ2dlciA9IEF0U2lnbkxvZ2dlcihBdEVudi5hcHBOYW1lc3BhY2UpOw0KDQogIEBvdmVycmlkZQ0KICBXaWRnZXQgYnVpbGQoQnVpbGRDb250ZXh0IGNvbnRleHQpIHsNCiAgICByZXR1cm4gTWF0ZXJpYWxBcHAoDQogICAgICAvLyAqIFRoZSBvbmJvYXJkaW5nIHNjcmVlbiAoZmlyc3Qgc2NyZWVuKQ0KICAgICAgaG9tZTogU2NhZmZvbGQoDQogICAgICAgIGFwcEJhcjogQXBwQmFyKA0KICAgICAgICAgIHRpdGxlOiBjb25zdCBUZXh0KCdTZW5kIHlvdXJzZWxmIGEgU25hY2tiYXInKSwNCiAgICAgICAgKSwNCiAgICAgICAgYm9keTogQnVpbGRlcigNCiAgICAgICAgICBidWlsZGVyOiAoY29udGV4dCkgPT4gQ2VudGVyKA0KICAgICAgICAgICAgY2hpbGQ6IEVsZXZhdGVkQnV0dG9uKA0KICAgICAgICAgICAgICBvblByZXNzZWQ6ICgpIGFzeW5jIHsNCiAgICAgICAgICAgICAgICB2YXIgcHJlZmVyZW5jZSA9IGF3YWl0IGZ1dHVyZVByZWZlcmVuY2U7DQogICAgICAgICAgICAgICAgc2V0U3RhdGUoKCkgew0KICAgICAgICAgICAgICAgICAgYXRDbGllbnRQcmVmZXJlbmNlID0gcHJlZmVyZW5jZTsNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICBPbmJvYXJkaW5nKA0KICAgICAgICAgICAgICAgICAgY29udGV4dDogY29udGV4dCwNCiAgICAgICAgICAgICAgICAgIGF0Q2xpZW50UHJlZmVyZW5jZTogYXRDbGllbnRQcmVmZXJlbmNlISwNCiAgICAgICAgICAgICAgICAgIGRvbWFpbjogQXRFbnYucm9vdERvbWFpbiwNCiAgICAgICAgICAgICAgICAgIHJvb3RFbnZpcm9ubWVudDogQXRFbnYucm9vdEVudmlyb25tZW50LA0KICAgICAgICAgICAgICAgICAgYXBwQVBJS2V5OiBBdEVudi5hcHBBcGlLZXksDQogICAgICAgICAgICAgICAgICBvbmJvYXJkOiAodmFsdWUsIGF0c2lnbikgew0KICAgICAgICAgICAgICAgICAgICBfbG9nZ2VyLmZpbmVyKCdTdWNjZXNzZnVsbHkgb25ib2FyZGVkICRhdHNpZ24nKTsNCiAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICBvbkVycm9yOiAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgX2xvZ2dlci5zZXZlcmUoJ09uYm9hcmRpbmcgdGhyb3dzICRlcnJvciBlcnJvcicpOw0KICAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAgIG5leHRTY3JlZW46IGNvbnN0IEhvbWVTY3JlZW4oKSwNCiAgICAgICAgICAgICAgICApOw0KICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICBjaGlsZDogY29uc3QgVGV4dCgnT25ib2FyZCBhbiBAc2lnbicpLA0KICAgICAgICAgICAgKSwNCiAgICAgICAgICApLA0KICAgICAgICApLA0KICAgICAgKSwNCiAgICApOw0KICB9DQp9DQoNCi8vKiBUaGUgbmV4dCBzY3JlZW4gYWZ0ZXIgb25ib2FyZGluZyAoc2Vjb25kIHNjcmVlbikNCmNsYXNzIEhvbWVTY3JlZW4gZXh0ZW5kcyBTdGF0ZWZ1bFdpZGdldCB7DQogIGNvbnN0IEhvbWVTY3JlZW4oe0tleT8ga2V5fSkgOiBzdXBlcihrZXk6IGtleSk7DQoNCiAgQG92ZXJyaWRlDQogIFN0YXRlPEhvbWVTY3JlZW4+IGNyZWF0ZVN0YXRlKCkgPT4gX0hvbWVTY3JlZW5TdGF0ZSgpOw0KfQ0KDQpjbGFzcyBfSG9tZVNjcmVlblN0YXRlIGV4dGVuZHMgU3RhdGU8SG9tZVNjcmVlbj4gew0KICBTbmFjayBsYXN0c25hY2sgPSBTbmFjayhzbmFjazogJ25vbmUnKTsNCiAgQG92ZXJyaWRlDQogIFdpZGdldCBidWlsZChCdWlsZENvbnRleHQgY29udGV4dCkgew0KICAgIC8vLyBHZXQgdGhlIEF0Q2xpZW50TWFuYWdlciBpbnN0YW5jZQ0KICAgIHZhciBhdENsaWVudE1hbmFnZXIgPSBBdENsaWVudE1hbmFnZXIuZ2V0SW5zdGFuY2UoKTsNCiAgICBTdHJpbmc/IGN1cnJlbnRBdHNpZ247DQogICAgbGF0ZSBBdENsaWVudCBhdENsaWVudDsNCg0KICAgIGF0Q2xpZW50ID0gYXRDbGllbnRNYW5hZ2VyLmF0Q2xpZW50Ow0KICAgIGN1cnJlbnRBdHNpZ24gPSBhdENsaWVudC5nZXRDdXJyZW50QXRTaWduKCk7DQogICAgcmV0dXJuIFNjYWZmb2xkKA0KICAgICAgYXBwQmFyOiBBcHBCYXIoDQogICAgICAgIHRpdGxlOiBjb25zdCBUZXh0KCdTbmFja2JhciBzZW5kZXInKSwNCiAgICAgICksDQogICAgICBib2R5OiBDZW50ZXIoDQogICAgICAgIGNoaWxkOiBDb2x1bW4oDQogICAgICAgICAgY2hpbGRyZW46IFsNCiAgICAgICAgICAgIGNvbnN0IFRleHQoJ1N1Y2Nlc3NmdWxseSBvbmJvYXJkZWQgYW5kIG5hdmlnYXRlZCB0byBGaXJzdEFwcFNjcmVlbicpLA0KDQogICAgICAgICAgICAvLy8gVXNlIHRoZSBBdENsaWVudE1hbmFnZXIgaW5zdGFuY2UgdG8gZ2V0IHRoZSBjdXJyZW50IGF0c2lnbg0KICAgICAgICAgICAgVGV4dCgnQ3VycmVudCBAc2lnbjogJGN1cnJlbnRBdHNpZ24nKSwNCiAgICAgICAgICAgIGNvbnN0IFNwYWNlcihmbGV4OiAxKSwNCiAgICAgICAgICAgIGNvbnN0IFRleHQoJ1NlbmQgeW91cnNlbGYgYSBzbmFja2JhcicpLA0KICAgICAgICAgICAgRWxldmF0ZWRCdXR0b24oDQogICAgICAgICAgICAgIG9uUHJlc3NlZDogKCkgew0KICAgICAgICAgICAgICAgIHNlbmRBdHNpZ25EYXRhLmNhbGwoY29udGV4dCwgbGFzdHNuYWNrKTsNCiAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgY2hpbGQ6IGNvbnN0IFRleHQoJ1NlbmQgYSBzbmFjaycpLA0KICAgICAgICAgICAgKSwNCiAgICAgICAgICAgIGNvbnN0IFNwYWNlcigNCiAgICAgICAgICAgICAgZmxleDogMSwNCiAgICAgICAgICAgICksDQogICAgICAgICAgXSwNCiAgICAgICAgKSwNCiAgICAgICksDQogICAgKTsNCiAgfQ0KfQ0KDQp2b2lkIHNlbmRBdHNpZ25EYXRhKGNvbnRleHQsIFNuYWNrIGxhc3RzbmFjaykgYXN5bmMgew0KICAvLy8gR2V0IHRoZSBBdENsaWVudE1hbmFnZXIgaW5zdGFuY2UNCiAgdmFyIGF0Q2xpZW50TWFuYWdlciA9IEF0Q2xpZW50TWFuYWdlci5nZXRJbnN0YW5jZSgpOw0KDQogIEZ1dHVyZTxBdENsaWVudFByZWZlcmVuY2U+IGZ1dHVyZVByZWZlcmVuY2UgPSBsb2FkQXRDbGllbnRQcmVmZXJlbmNlKCk7DQoNCiAgdmFyIHByZWZlcmVuY2UgPSBhd2FpdCBmdXR1cmVQcmVmZXJlbmNlOw0KDQogIHZhciBzbmFja3MgPSBbDQogICAgJyBNaWxreSBXYXknLA0KICAgICcgRGltZSBCYXInLA0KICAgICcgQ3J1bmNoeSBCYXInLA0KICAgICcgTWFycyBCYXInLA0KICAgICcgU25pY2tlcnMgQmFyJywNCiAgICAnIFphZ251dCBCYXInLA0KICAgICduIEFsbW9uZCBKb3kgQmFyJywNCiAgICAnIDMgTXVza2V0ZWVycyBCYXInLA0KICAgICcgQ2xhcmsgQmFyJywNCiAgICAnIENhcmFtZWxsbyBCYXInLA0KICAgICcgVHdpeCBCYXInLA0KICAgICcgS2l0S2F0IEJhcicsDQogIF07DQogIFN0cmluZz8gY3VycmVudEF0c2lnbjsNCiAgbGF0ZSBBdENsaWVudCBhdENsaWVudDsNCiAgYXRDbGllbnQgPSBhdENsaWVudE1hbmFnZXIuYXRDbGllbnQ7DQogIGF0Q2xpZW50TWFuYWdlci5hdENsaWVudC5zZXRQcmVmZXJlbmNlcyhwcmVmZXJlbmNlKTsNCiAgY3VycmVudEF0c2lnbiA9IGF0Q2xpZW50LmdldEN1cnJlbnRBdFNpZ24oKTsNCg0KICB2YXIgbWV0YURhdGEgPSBNZXRhZGF0YSgpDQogICAgLi5pc1B1YmxpYyA9IHRydWUNCiAgICAuLmlzRW5jcnlwdGVkID0gdHJ1ZQ0KICAgIC4ubmFtZXNwYWNlQXdhcmUgPSB0cnVlDQogICAgLi50dGwgPSAxMDAwMDA7DQoNCiAgdmFyIGtleSA9IEF0S2V5KCkNCiAgICAuLmtleSA9ICdzbmFja2JhcicNCiAgICAuLnNoYXJlZEJ5ID0gY3VycmVudEF0c2lnbg0KICAgIC4uc2hhcmVkV2l0aCA9IG51bGwNCiAgICAuLm1ldGFkYXRhID0gbWV0YURhdGE7DQoNCiAgLy8gVGhlIG1hZ2ljIGxpbmUgdG8gc2VuZCB0aGUgc25hY2sNCiAgU25hY2sgc25hY2tiYXIgPSBTbmFjayhzbmFjazogc25hY2tzW1JhbmRvbSgpLm5leHRJbnQoc25hY2tzLmxlbmd0aCldKTsNCiAgLy8gTWFrZSBzdXJlIHdlIHNlbmQgYSBmcmVzaCBzbmFjayAhDQogIHdoaWxlIChsYXN0c25hY2suc25hY2sgPT0gc25hY2tiYXIuc25hY2spIHsNCiAgICBzbmFja2JhciA9IFNuYWNrKHNuYWNrOiBzbmFja3NbUmFuZG9tKCkubmV4dEludChzbmFja3MubGVuZ3RoKV0pOw0KICB9DQogIGF3YWl0IGF0Q2xpZW50LnB1dChrZXksIHNuYWNrYmFyLnRvSnNvbigpLnRvU3RyaW5nKCkpOw0KICBwb3BTbmFja0Jhcihjb250ZXh0LCBzbmFja2Jhci5zbmFjayk7DQp9DQoNCnZvaWQgcG9wU25hY2tCYXIoY29udGV4dCwgU3RyaW5nIHNuYWNrKSB7DQogIGZpbmFsIHNuYWNrQmFyID0gU25hY2tCYXIoDQogICAgY29udGVudDogVGV4dCgnV2UganVzdCBzZW50LiBBJHNuYWNrICEgJyksDQogICAgYWN0aW9uOiBTbmFja0JhckFjdGlvbigNCiAgICAgIGxhYmVsOiAnVW5kbycsDQogICAgICBvblByZXNzZWQ6ICgpIHsNCiAgICAgICAgLy8gU29tZSBjb2RlIHRvIHVuZG8gdGhlIGNoYW5nZS4NCiAgICAgIH0sDQogICAgKSwNCiAgKTsNCg0KICBTY2FmZm9sZE1lc3Nlbmdlci5vZihjb250ZXh0KS5zaG93U25hY2tCYXIoc25hY2tCYXIpOw0KfQ0KDQpjbGFzcyBTbmFjayB7DQogIFN0cmluZyBzbmFjazsNCg0KICBTbmFjayh7DQogICAgcmVxdWlyZWQgdGhpcy5zbmFjaywNCiAgfSk7DQoNCiAgU25hY2suZnJvbUpzb24oTWFwPFN0cmluZywgZHluYW1pYz4ganNvbikgOiBzbmFjayA9IGpzb25bJ3NuYWNrJ107DQoNCiAgTWFwPFN0cmluZywgZHluYW1pYz4gdG9Kc29uKCkgPT4gew0KICAgICAgICAnInNuYWNrIic6ICciJHNuYWNrIicsDQogICAgICB9Ow0KfQ0K",
      "type": "text"
    }
  ],
  "hooks": [],
  "name": "snackbar_sender",
  "description": "Send snackbars to a flutter web application publically.",
  "version": "0.1.0",
  "environment": {"mason": "any"},
  "vars": {}
});
