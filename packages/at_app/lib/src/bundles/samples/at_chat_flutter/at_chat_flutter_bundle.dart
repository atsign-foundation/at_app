// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: prefer_single_quotes, public_member_api_docs, lines_longer_than_80_chars, implicit_dynamic_list_literal, implicit_dynamic_map_literal

import 'package:mason/mason.dart';

final atChatFlutterBundle = MasonBundle.fromJson(<String, dynamic>{
  "files": [
    {
      "path": "lib\\main.dart",
      "data":
          "aW1wb3J0ICdkYXJ0OmFzeW5jJzsNCg0KaW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvbWF0ZXJpYWwuZGFydCc7DQppbXBvcnQgJ3BhY2thZ2U6YXRfY2xpZW50X21vYmlsZS9hdF9jbGllbnRfbW9iaWxlLmRhcnQnOw0KaW1wb3J0ICdwYWNrYWdlOmF0X29uYm9hcmRpbmdfZmx1dHRlci9hdF9vbmJvYXJkaW5nX2ZsdXR0ZXIuZGFydCcNCiAgICBzaG93IE9uYm9hcmRpbmc7DQppbXBvcnQgJ3BhY2thZ2U6YXRfdXRpbHMvYXRfbG9nZ2VyLmRhcnQnIHNob3cgQXRTaWduTG9nZ2VyOw0KaW1wb3J0ICdwYWNrYWdlOnBhdGhfcHJvdmlkZXIvcGF0aF9wcm92aWRlci5kYXJ0Jw0KICAgIHNob3cgZ2V0QXBwbGljYXRpb25TdXBwb3J0RGlyZWN0b3J5Ow0KaW1wb3J0ICdwYWNrYWdlOmF0X2FwcF9mbHV0dGVyL2F0X2FwcF9mbHV0dGVyLmRhcnQnIHNob3cgQXRFbnY7DQppbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlcl9rZXljaGFpbi9mbHV0dGVyX2tleWNoYWluLmRhcnQnOw0KDQppbXBvcnQgJ3NlY29uZF9zY3JlZW4uZGFydCc7DQoNCkZ1dHVyZTx2b2lkPiBtYWluKCkgYXN5bmMgew0KICBhd2FpdCBBdEVudi5sb2FkKCk7DQogIHJ1bkFwcChjb25zdCBNeUFwcCgpKTsNCn0NCg0KRnV0dXJlPEF0Q2xpZW50UHJlZmVyZW5jZT4gbG9hZEF0Q2xpZW50UHJlZmVyZW5jZSgpIGFzeW5jIHsNCiAgdmFyIGRpciA9IGF3YWl0IGdldEFwcGxpY2F0aW9uU3VwcG9ydERpcmVjdG9yeSgpOw0KICByZXR1cm4gQXRDbGllbnRQcmVmZXJlbmNlKCkNCiAgICAuLnJvb3REb21haW4gPSBBdEVudi5yb290RG9tYWluDQogICAgLi5uYW1lc3BhY2UgPSBBdEVudi5hcHBOYW1lc3BhY2UNCiAgICAuLmhpdmVTdG9yYWdlUGF0aCA9IGRpci5wYXRoDQogICAgLi5jb21taXRMb2dQYXRoID0gZGlyLnBhdGgNCiAgICAuLmlzTG9jYWxTdG9yZVJlcXVpcmVkID0gdHJ1ZTsNCn0NCg0KY2xhc3MgTXlBcHAgZXh0ZW5kcyBTdGF0ZWZ1bFdpZGdldCB7DQogIGNvbnN0IE15QXBwKHtLZXk/IGtleX0pIDogc3VwZXIoa2V5OiBrZXkpOw0KICBAb3ZlcnJpZGUNCiAgX015QXBwU3RhdGUgY3JlYXRlU3RhdGUoKSA9PiBfTXlBcHBTdGF0ZSgpOw0KfQ0KDQpjbGFzcyBfTXlBcHBTdGF0ZSBleHRlbmRzIFN0YXRlPE15QXBwPiB7DQogIC8vICogbG9hZCB0aGUgQXRDbGllbnRQcmVmZXJlbmNlIGluIHRoZSBiYWNrZ3JvdW5kDQogIEZ1dHVyZTxBdENsaWVudFByZWZlcmVuY2U+IGZ1dHVyZVByZWZlcmVuY2UgPSBsb2FkQXRDbGllbnRQcmVmZXJlbmNlKCk7DQogIEF0Q2xpZW50UHJlZmVyZW5jZT8gYXRDbGllbnRQcmVmZXJlbmNlOw0KICBBdENsaWVudFNlcnZpY2U/IGF0Q2xpZW50U2VydmljZTsNCg0KICBmaW5hbCBBdFNpZ25Mb2dnZXIgX2xvZ2dlciA9IEF0U2lnbkxvZ2dlcihBdEVudi5hcHBOYW1lc3BhY2UpOw0KDQogIEBvdmVycmlkZQ0KICBXaWRnZXQgYnVpbGQoQnVpbGRDb250ZXh0IGNvbnRleHQpIHsNCiAgICByZXR1cm4gTWF0ZXJpYWxBcHAoDQogICAgICAvLyAqIFRoZSBvbmJvYXJkaW5nIHNjcmVlbiAoZmlyc3Qgc2NyZWVuKQ0KICAgICAgaG9tZTogU2NhZmZvbGQoDQogICAgICAgICAgYXBwQmFyOiBBcHBCYXIoDQogICAgICAgICAgICB0aXRsZTogY29uc3QgVGV4dCgnUGx1Z2luIGV4YW1wbGUgYXBwJyksDQogICAgICAgICAgKSwNCiAgICAgICAgICBib2R5OiBCdWlsZGVyKA0KICAgICAgICAgICAgYnVpbGRlcjogKGNvbnRleHQpID0+IENvbHVtbigNCiAgICAgICAgICAgICAgY2hpbGRyZW46IFsNCiAgICAgICAgICAgICAgICBjb25zdCBTaXplZEJveCgNCiAgICAgICAgICAgICAgICAgIGhlaWdodDogMjUsDQogICAgICAgICAgICAgICAgKSwNCiAgICAgICAgICAgICAgICBDb250YWluZXIoDQogICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IGNvbnN0IEVkZ2VJbnNldHMuYWxsKDEwLjApLA0KICAgICAgICAgICAgICAgICAgICBjaGlsZDogY29uc3QgQ2VudGVyKA0KICAgICAgICAgICAgICAgICAgICAgIGNoaWxkOiBUZXh0KA0KICAgICAgICAgICAgICAgICAgICAgICAgICAnQSBjbGllbnQgc2VydmljZSBzaG91bGQgY3JlYXRlIGFuIGF0Q2xpZW50IGluc3RhbmNlIGFuZCBjYWxsIG9uYm9hcmQgbWV0aG9kIGJlZm9yZSBuYXZpZ2F0aW5nIHRvIFFSIHNjYW5uZXIgc2NyZWVuJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dEFsaWduOiBUZXh0QWxpZ24uY2VudGVyKSwNCiAgICAgICAgICAgICAgICAgICAgKSksDQogICAgICAgICAgICAgICAgY29uc3QgU2l6ZWRCb3goDQogICAgICAgICAgICAgICAgICBoZWlnaHQ6IDI1LA0KICAgICAgICAgICAgICAgICksDQogICAgICAgICAgICAgICAgQ2VudGVyKA0KICAgICAgICAgICAgICAgICAgY2hpbGQ6IEVsZXZhdGVkQnV0dG9uKA0KICAgICAgICAgICAgICAgICAgICBvblByZXNzZWQ6ICgpIGFzeW5jIHsNCiAgICAgICAgICAgICAgICAgICAgICB2YXIgcHJlZmVyZW5jZSA9IGF3YWl0IGZ1dHVyZVByZWZlcmVuY2U7DQogICAgICAgICAgICAgICAgICAgICAgc2V0U3RhdGUoKCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgYXRDbGllbnRQcmVmZXJlbmNlID0gcHJlZmVyZW5jZTsNCiAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICBPbmJvYXJkaW5nKA0KICAgICAgICAgICAgICAgICAgICAgICAgY29udGV4dDogY29udGV4dCwNCiAgICAgICAgICAgICAgICAgICAgICAgIGF0Q2xpZW50UHJlZmVyZW5jZTogYXRDbGllbnRQcmVmZXJlbmNlISwNCiAgICAgICAgICAgICAgICAgICAgICAgIGRvbWFpbjogQXRFbnYucm9vdERvbWFpbiwNCiAgICAgICAgICAgICAgICAgICAgICAgIHJvb3RFbnZpcm9ubWVudDogQXRFbnYucm9vdEVudmlyb25tZW50LA0KICAgICAgICAgICAgICAgICAgICAgICAgYXBwQVBJS2V5OiAnNDc3Yi04NzZ1LWJjZXotYzQyei02YTNkJywNCiAgICAgICAgICAgICAgICAgICAgICAgIG9uYm9hcmQ6IChNYXA8U3RyaW5nPywgQXRDbGllbnRTZXJ2aWNlPiB2YWx1ZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBTdHJpbmc/IGF0c2lnbikgYXN5bmMgew0KICAgICAgICAgICAgICAgICAgICAgICAgICBhdENsaWVudFNlcnZpY2UgPSB2YWx1ZVthdHNpZ25dOw0KICAgICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCBOYXZpZ2F0b3IucHVzaFJlcGxhY2VtZW50KA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGV4dCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1hdGVyaWFsUGFnZVJvdXRlKA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJ1aWxkZXI6IChjb250ZXh0KSA9PiBjb25zdCBTZWNvbmRTY3JlZW4oKSkpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAgICAgICAgIG9uRXJyb3I6IChlcnJvcikgYXN5bmMgew0KICAgICAgICAgICAgICAgICAgICAgICAgICBfbG9nZ2VyLnNldmVyZSgnT25ib2FyZGluZyB0aHJvd3MgJGVycm9yIGVycm9yJyk7DQogICAgICAgICAgICAgICAgICAgICAgICAgIGF3YWl0IHNob3dEaWFsb2coDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZXh0OiBjb250ZXh0LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnVpbGRlcjogKEJ1aWxkQ29udGV4dCBjb250ZXh0KSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBBbGVydERpYWxvZygNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBjb25zdCBUZXh0KCdTb21ldGhpbmcgd2VudCB3cm9uZycpLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjdGlvbnM6IFsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRleHRCdXR0b24oDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25QcmVzc2VkOiAoKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYXZpZ2F0b3Iub2YoY29udGV4dCkucG9wKCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZDogY29uc3QgVGV4dCgnb2snKSkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICAgICAgICk7DQogICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgIGNoaWxkOiBjb25zdCBUZXh0KCdTdGFydCBvbmJvYXJkaW5nJyksDQogICAgICAgICAgICAgICAgICApLA0KICAgICAgICAgICAgICAgICksDQogICAgICAgICAgICAgICAgY29uc3QgU2l6ZWRCb3goDQogICAgICAgICAgICAgICAgICBoZWlnaHQ6IDI1LA0KICAgICAgICAgICAgICAgICksDQogICAgICAgICAgICAgICAgQ2VudGVyKA0KICAgICAgICAgICAgICAgICAgICBjaGlsZDogVGV4dEJ1dHRvbigNCiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiBCdXR0b25TdHlsZSgNCiAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTWF0ZXJpYWxTdGF0ZVByb3BlcnR5LmFsbDxDb2xvcj4oQ29sb3JzLmJsYWNrMTIpLA0KICAgICAgICAgICAgICAgICAgICAgICAgKSwNCiAgICAgICAgICAgICAgICAgICAgICAgIG9uUHJlc3NlZDogKCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICBGbHV0dGVyS2V5Y2hhaW4ucmVtb3ZlKGtleTogJ0BhdHNpZ24nKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgICAgICBjaGlsZDogY29uc3QgVGV4dCgnQ2xlYXIgcGFpcmVkIGF0c2lnbnMnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiBUZXh0U3R5bGUoY29sb3I6IENvbG9ycy5ibGFjaykpKSksDQogICAgICAgICAgICAgIF0sDQogICAgICAgICAgICApLA0KICAgICAgICAgICkpLA0KICAgICk7DQogIH0NCn0NCg==",
      "type": "text"
    },
    {
      "path": "lib\\second_screen.dart",
      "data":
          "",
      "type": "text"
    },
    {
      "path": "lib\\third_screen.dart",
      "data":
          "aW1wb3J0ICdwYWNrYWdlOmF0X2NoYXRfZmx1dHRlci9hdF9jaGF0X2ZsdXR0ZXIuZGFydCc7DQppbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlci9tYXRlcmlhbC5kYXJ0JzsNCg0KY2xhc3MgVGhpcmRTY3JlZW4gZXh0ZW5kcyBTdGF0ZWZ1bFdpZGdldCB7DQogIGNvbnN0IFRoaXJkU2NyZWVuKHtLZXk/IGtleX0pIDogc3VwZXIoa2V5OiBrZXkpOw0KDQogIEBvdmVycmlkZQ0KICBfVGhpcmRTY3JlZW5TdGF0ZSBjcmVhdGVTdGF0ZSgpID0+IF9UaGlyZFNjcmVlblN0YXRlKCk7DQp9DQoNCmNsYXNzIF9UaGlyZFNjcmVlblN0YXRlIGV4dGVuZHMgU3RhdGU8VGhpcmRTY3JlZW4+IHsNCiAgQG92ZXJyaWRlDQogIFdpZGdldCBidWlsZChCdWlsZENvbnRleHQgY29udGV4dCkgew0KICAgIHJldHVybiBTY2FmZm9sZCgNCiAgICAgIGFwcEJhcjogQXBwQmFyKHRpdGxlOiBjb25zdCBUZXh0KCdDaGF0IFNjcmVlbicpLCBhY3Rpb25zOiA8V2lkZ2V0PlsNCiAgICAgICAgSWNvbkJ1dHRvbigNCiAgICAgICAgICBpY29uOiBjb25zdCBJY29uKEljb25zLmRlbGV0ZSksDQogICAgICAgICAgdG9vbHRpcDogJ1Nob3cgU25hY2tiYXInLA0KICAgICAgICAgIG9uUHJlc3NlZDogKCkgYXN5bmMgew0KICAgICAgICAgICAgZmluYWwgY29uZmlybWVkID0gYXdhaXQgY29uZmlybSgNCiAgICAgICAgICAgICAgdGhpcy5jb250ZXh0LA0KICAgICAgICAgICAgICB0aXRsZTogJ0NvbmZpcm0gRGlhbG9nJywNCiAgICAgICAgICAgICAgbWVzc2FnZTogJ0RvIHlvdSB3YW50IHRvIGRlbGV0ZSB0aGlzIGNoYXQ/JywNCiAgICAgICAgICAgICAgcG9zaXRpdmVBY3Rpb25UaXRsZTogJ1llcycsDQogICAgICAgICAgICAgIG5lZ2F0aXZlQWN0aW9uVGl0bGU6ICdObycsDQogICAgICAgICAgICApOw0KICAgICAgICAgICAgaWYgKCFjb25maXJtZWQpIHJldHVybjsNCg0KICAgICAgICAgICAgdmFyIHJlc3VsdCA9IGF3YWl0IGRlbGV0ZU1lc3NhZ2VzKCk7DQogICAgICAgICAgICB2YXIgbWVzc2FnZSA9IHJlc3VsdCA/ICdNZXNzYWdlcyBhcmUgZGVsZXRlZCcgOiAnRmFpbGVkIHRvIGRlbGV0ZSc7DQogICAgICAgICAgICBTY2FmZm9sZE1lc3Nlbmdlci5vZihjb250ZXh0KQ0KICAgICAgICAgICAgICAgIC5zaG93U25hY2tCYXIoU25hY2tCYXIoY29udGVudDogVGV4dChtZXNzYWdlKSkpOw0KICAgICAgICAgIH0sDQogICAgICAgICksDQogICAgICBdKSwNCiAgICAgIGJvZHk6IENoYXRTY3JlZW4oDQogICAgICAgIGhlaWdodDogTWVkaWFRdWVyeS5vZihjb250ZXh0KS5zaXplLmhlaWdodCwNCiAgICAgICAgaW5jb21pbmdNZXNzYWdlQ29sb3I6IENvbG9ycy5ibHVlWzEwMF0hLA0KICAgICAgICBvdXRnb2luZ01lc3NhZ2VDb2xvcjogQ29sb3JzLmdyZWVuWzEwMF0hLA0KICAgICAgICBpc1NjcmVlbjogdHJ1ZSwNCiAgICAgICksDQogICAgKTsNCiAgfQ0KfQ0K",
      "type": "text"
    }
  ],
  "hooks": [],
  "name": "at_chat_flutter",
  "description": "A sample of how to use the at_chat_flutter package.",
  "version": "0.1.0",
  "environment": {"mason": "any"},
  "vars": {}
});
